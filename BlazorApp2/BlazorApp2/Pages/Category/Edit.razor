@page "/categories/update/{id:int}"
@using BlazorApp2.DTOs
@using BlazorApp2.Services
@inject CategoryService CategoryService
@inject NavigationManager NavigationManager

<h3>Edit Category</h3>

@if (category == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="category" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Name:</label>
            <InputText @bind-Value="category.Name" class="form-control" />
        </div>
        <div>
            <label>Description:</label>
            <InputText @bind-Value="category.Description" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }

    private UpdateCategoryDto? category;

    protected override async Task OnInitializedAsync()
    {
        var existingCategory = await CategoryService.GetCategoryByIdAsync(id);
        if (existingCategory != null)
        {
            category = new UpdateCategoryDto
            {
                Name = existingCategory.Name,
                Description = existingCategory.Description
            };
        }
        else
        {
            // Nếu không tìm thấy category, chuyển hướng về danh sách hoặc xử lý khác
            NavigationManager.NavigateTo("/categories");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (category != null)
        {
            var response = await CategoryService.UpdateCategoryAsync(id, category);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/categories");
            }
            else
            {
                // Handle error (ví dụ show thông báo)
            }
        }
    }
}