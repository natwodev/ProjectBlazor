@page "/categories/update/{id:int}"
@using BlazorApp2.DTOs
@using BlazorApp2.Services
@inject CategoryService CategoryService
@inject AuthService AuthService
@inject NavigationManager NavigationManager

@if (!_isAdmin)
{
    <div class="alert alert-danger">
        Bạn không có quyền truy cập trang này.
    </div>
}
else
{
    <h3>Edit Category</h3>

    @if (category == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <EditForm Model="category" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label>Name:</label>
                <InputText @bind-Value="category.Name" class="form-control" />
            </div>
            <div>
                <label>Description:</label>
                <InputText @bind-Value="category.Description" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary">Update</button>
        </EditForm>
    }
}

@code {
    [Parameter]
    public int id { get; set; }

    private UpdateCategoryDto? category;
    private bool _isAdmin;

    protected override async Task OnInitializedAsync()
    {
        _isAdmin = await AuthService.IsAdmin();
        if (!_isAdmin)
        {
            NavigationManager.NavigateTo("/categories");
            return;
        }

        var existingCategory = await CategoryService.GetCategoryByIdAsync(id);
        if (existingCategory != null)
        {
            category = new UpdateCategoryDto
            {
                Name = existingCategory.Name,
                Description = existingCategory.Description
            };
        }
        else
        {
            NavigationManager.NavigateTo("/categories");
        }
    }

    private async Task HandleValidSubmit()
    {
        if (category != null)
        {
            var response = await CategoryService.UpdateCategoryAsync(id, category);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/categories");
            }
            else
            {
                // Handle error (ví dụ show thông báo)
            }
        }
    }
}